---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "weatherservice.fullname" . }}
  labels:
    app: {{ template "weatherservice.name" . }}
    chart: {{ template "weatherservice.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ include "weatherservice.name" . }}
      release: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ include "weatherservice.name" . }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.weatherservice.user }}
      restartPolicy: Always
      containers:
      - name: {{ include "weatherservice.name" . }}
        image: "{{ .Values.weathServiceImage }}:{{ .Values.weathServiceTag }}"
        env:
        - name: GRPC_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: GRPC_PORT
          value: {{ .Values.weatherservice.port | quote }}
        ports:
        - containerPort: {{ .Values.weatherservice.port }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "weatherservice.fullname" . }}
  labels:
    app: {{ template "weatherservice.name" . }}
    chart: {{ template "weatherservice.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  ports:
  - port: {{ .Values.weatherservice.port }}
    targetPort: {{ .Values.weatherservice.port }}
    protocol: TCP
    name: {{ include "weatherservice.fullname" . }}-port
  selector:
    app: {{ include "weatherservice.name" . }}
    release: {{ .Release.Name }}
  type: {{ .Values.weatherservice.type }}
---
{{- if .Values.networkPoliciesEnabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "weatherservice.fullname" . }}-from-{{ include "planner.fullname" . }}
  labels:
    app: {{ template "mongodb.name" . }}
    chart: {{ template "mongodb.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  podSelector:
    matchLabels:
      app: {{ include "weatherservice.name" . }}
      release: {{ .Release.Name }}
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: {{ include "planner.name" . }}
          release: {{ .Release.Name }}
    ports:
    - port: {{ .Values.weatherservice.port }}
      protocol: TCP
{{- end }}